'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.api = api;
exports.pagination = pagination;
exports.aggregatePagination = aggregatePagination;

var _isomorphicFetch = require('isomorphic-fetch');

var _isomorphicFetch2 = _interopRequireDefault(_isomorphicFetch);

var _querystring = require('querystring');

var _querystring2 = _interopRequireDefault(_querystring);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var fetchOptions = {
	method: 'GET',
	headers: {
		'User-Agent': 'WikiJs/0.1 (https://github.com/dijs/wiki; richard.vanderdys@gmail.com)'
	}
};

function api(apiOptions) {
	var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	var qs = Object.assign({}, params, {
		format: 'json',
		action: 'query'
	});
	var url = apiOptions.apiUrl + '?' + _querystring2.default.stringify(qs);
	return (0, _isomorphicFetch2.default)(url, fetchOptions).then(function (res) {
		return res.json();
	});
}

function pagination(apiOptions, params, parseResults) {
	return api(apiOptions, params).then(function (res) {
		var resolution = {};
		resolution.results = parseResults(res);
		if (res['continue']) {
			var continueType = Object.keys(res['continue']).filter(function (key) {
				return key !== 'continue';
			})[0];
			var continueKey = res['continue'][continueType];
			params[continueType] = continueKey;
			resolution.next = function () {
				return pagination(apiOptions, params, parseResults);
			};
		}
		return resolution;
	});
}

function aggregatePagination(pagination) {
	var previousResults = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];

	return pagination.then(function (res) {
		var results = [].concat(_toConsumableArray(previousResults), _toConsumableArray(res.results));
		if (res.next) {
			return aggregatePagination(res.next(), results);
		} else {
			return results;
		}
	});
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy91dGlsLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O1FBVWdCLEcsR0FBQSxHO1FBU0EsVSxHQUFBLFU7UUFpQkEsbUIsR0FBQSxtQjs7QUFwQ2hCOzs7O0FBQ0E7Ozs7Ozs7O0FBRUEsSUFBTSxlQUFlO0FBQ3BCLFNBQVEsS0FEWTtBQUVwQixVQUFTO0FBQ1IsZ0JBQWM7QUFETjtBQUZXLENBQXJCOztBQU9PLFNBQVMsR0FBVCxDQUFhLFVBQWIsRUFBc0M7QUFBQSxLQUFiLE1BQWEseURBQUosRUFBSTs7QUFDNUMsS0FBTSxLQUFLLE9BQU8sTUFBUCxDQUFjLEVBQWQsRUFBa0IsTUFBbEIsRUFBMEI7QUFDcEMsVUFBUSxNQUQ0QjtBQUVwQyxVQUFRO0FBRjRCLEVBQTFCLENBQVg7QUFJQSxLQUFNLE1BQVMsV0FBVyxNQUFwQixTQUE4QixzQkFBWSxTQUFaLENBQXNCLEVBQXRCLENBQXBDO0FBQ0EsUUFBTywrQkFBTSxHQUFOLEVBQVcsWUFBWCxFQUF5QixJQUF6QixDQUE4QjtBQUFBLFNBQU8sSUFBSSxJQUFKLEVBQVA7QUFBQSxFQUE5QixDQUFQO0FBQ0E7O0FBRU0sU0FBUyxVQUFULENBQW9CLFVBQXBCLEVBQWdDLE1BQWhDLEVBQXdDLFlBQXhDLEVBQXNEO0FBQzVELFFBQU8sSUFBSSxVQUFKLEVBQWdCLE1BQWhCLEVBQ0wsSUFESyxDQUNBLGVBQU87QUFDWixNQUFJLGFBQWEsRUFBakI7QUFDQSxhQUFXLE9BQVgsR0FBcUIsYUFBYSxHQUFiLENBQXJCO0FBQ0EsTUFBSSxJQUFJLFVBQUosQ0FBSixFQUFxQjtBQUNwQixPQUFNLGVBQWUsT0FDbkIsSUFEbUIsQ0FDZCxJQUFJLFVBQUosQ0FEYyxFQUVuQixNQUZtQixDQUVaO0FBQUEsV0FBTyxRQUFRLFVBQWY7QUFBQSxJQUZZLEVBRWUsQ0FGZixDQUFyQjtBQUdBLE9BQU0sY0FBYyxJQUFJLFVBQUosRUFBZ0IsWUFBaEIsQ0FBcEI7QUFDQSxVQUFPLFlBQVAsSUFBdUIsV0FBdkI7QUFDQSxjQUFXLElBQVgsR0FBa0I7QUFBQSxXQUFNLFdBQVcsVUFBWCxFQUF1QixNQUF2QixFQUErQixZQUEvQixDQUFOO0FBQUEsSUFBbEI7QUFDQTtBQUNELFNBQU8sVUFBUDtBQUNBLEVBYkssQ0FBUDtBQWNBOztBQUVNLFNBQVMsbUJBQVQsQ0FBNkIsVUFBN0IsRUFBK0Q7QUFBQSxLQUF0QixlQUFzQix5REFBSixFQUFJOztBQUNyRSxRQUFPLFdBQ0wsSUFESyxDQUNBLGVBQU87QUFDWixNQUFNLHVDQUFjLGVBQWQsc0JBQWtDLElBQUksT0FBdEMsRUFBTjtBQUNBLE1BQUksSUFBSSxJQUFSLEVBQWM7QUFDYixVQUFPLG9CQUFvQixJQUFJLElBQUosRUFBcEIsRUFBZ0MsT0FBaEMsQ0FBUDtBQUNBLEdBRkQsTUFFTztBQUNOLFVBQU8sT0FBUDtBQUNBO0FBQ0QsRUFSSyxDQUFQO0FBU0EiLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLWZldGNoJztcbmltcG9ydCBxdWVyeXN0cmluZyBmcm9tICdxdWVyeXN0cmluZyc7XG5cbmNvbnN0IGZldGNoT3B0aW9ucyA9IHtcblx0bWV0aG9kOiAnR0VUJyxcblx0aGVhZGVyczoge1xuXHRcdCdVc2VyLUFnZW50JzogJ1dpa2lKcy8wLjEgKGh0dHBzOi8vZ2l0aHViLmNvbS9kaWpzL3dpa2k7IHJpY2hhcmQudmFuZGVyZHlzQGdtYWlsLmNvbSknXG5cdH1cbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBhcGkoYXBpT3B0aW9ucywgcGFyYW1zID0ge30pIHtcblx0Y29uc3QgcXMgPSBPYmplY3QuYXNzaWduKHt9LCBwYXJhbXMsIHtcblx0XHRmb3JtYXQ6ICdqc29uJyxcblx0XHRhY3Rpb246ICdxdWVyeSdcblx0fSk7XG5cdGNvbnN0IHVybCA9IGAke2FwaU9wdGlvbnMuYXBpVXJsfT8ke3F1ZXJ5c3RyaW5nLnN0cmluZ2lmeShxcyl9YDtcblx0cmV0dXJuIGZldGNoKHVybCwgZmV0Y2hPcHRpb25zKS50aGVuKHJlcyA9PiByZXMuanNvbigpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhZ2luYXRpb24oYXBpT3B0aW9ucywgcGFyYW1zLCBwYXJzZVJlc3VsdHMpIHtcblx0cmV0dXJuIGFwaShhcGlPcHRpb25zLCBwYXJhbXMpXG5cdFx0LnRoZW4ocmVzID0+IHtcblx0XHRcdGxldCByZXNvbHV0aW9uID0ge307XG5cdFx0XHRyZXNvbHV0aW9uLnJlc3VsdHMgPSBwYXJzZVJlc3VsdHMocmVzKTtcblx0XHRcdGlmIChyZXNbJ2NvbnRpbnVlJ10pIHtcblx0XHRcdFx0Y29uc3QgY29udGludWVUeXBlID0gT2JqZWN0XG5cdFx0XHRcdFx0LmtleXMocmVzWydjb250aW51ZSddKVxuXHRcdFx0XHRcdC5maWx0ZXIoa2V5ID0+IGtleSAhPT0gJ2NvbnRpbnVlJylbMF07XG5cdFx0XHRcdGNvbnN0IGNvbnRpbnVlS2V5ID0gcmVzWydjb250aW51ZSddW2NvbnRpbnVlVHlwZV07XG5cdFx0XHRcdHBhcmFtc1tjb250aW51ZVR5cGVdID0gY29udGludWVLZXk7XG5cdFx0XHRcdHJlc29sdXRpb24ubmV4dCA9ICgpID0+IHBhZ2luYXRpb24oYXBpT3B0aW9ucywgcGFyYW1zLCBwYXJzZVJlc3VsdHMpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlc29sdXRpb247XG5cdFx0fSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZ2dyZWdhdGVQYWdpbmF0aW9uKHBhZ2luYXRpb24sIHByZXZpb3VzUmVzdWx0cyA9IFtdKSB7XG5cdHJldHVybiBwYWdpbmF0aW9uXG5cdFx0LnRoZW4ocmVzID0+IHtcblx0XHRcdGNvbnN0IHJlc3VsdHMgPSBbLi4ucHJldmlvdXNSZXN1bHRzLCAuLi5yZXMucmVzdWx0c107XG5cdFx0XHRpZiAocmVzLm5leHQpIHtcblx0XHRcdFx0cmV0dXJuIGFnZ3JlZ2F0ZVBhZ2luYXRpb24ocmVzLm5leHQoKSwgcmVzdWx0cyk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdH1cblx0XHR9KTtcbn1cbiJdfQ==